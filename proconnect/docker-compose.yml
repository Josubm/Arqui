version: '3.9'
services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    networks: [proconnect]

  auth-service:
    build: ./services/auth
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${AUTH_DB}
      JWT_SECRET: ${JWT_SECRET}
      CORS_ORIGIN: ${CORS_ORIGIN}
    depends_on: [postgres]
    ports: ["4001:4001"]
    networks: [proconnect]

  professionals-service:
    build: ./services/professionals
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${PRO_DB}
      CORS_ORIGIN: ${CORS_ORIGIN}
    depends_on: [postgres]
    ports: ["4002:4002"]
    networks: [proconnect]

  booking-service:
    build: ./services/booking
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${BOOKING_DB}
      AUTH_URL: http://auth-service:4001
      CORS_ORIGIN: ${CORS_ORIGIN}
    depends_on: [postgres, auth-service]
    ports: ["4003:4003"]
    networks: [proconnect]

  gateway:
    build: ./gateway
    environment:
      AUTH_URL: ${AUTH_URL}
      PRO_URL: ${PRO_URL}
      BOOK_URL: ${BOOK_URL}
      CORS_ORIGIN: ${CORS_ORIGIN}
    depends_on: [auth-service, professionals-service, booking-service]
    ports: ["8080:8080"]
    networks: [proconnect]

  webapp:
    build: ./webapp
    environment:
      VITE_API_URL: http://localhost:8080/api
    depends_on: [gateway]
    ports: ["5173:5173"]
    networks: [proconnect]

volumes:
  pgdata:

networks:
  proconnect:
    driver: bridge
